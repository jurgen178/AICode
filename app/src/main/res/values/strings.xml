<!-- Copyright AI code

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. -->

<resources>
  <string name="app_name" translatable="false">AI Code</string>

  <string name="import_error">The selected file could not be imported.\n%1$s</string>
  <string name="export_error">An error occurred while exporting the data:\n%1$s</string>
  <string name="export_select_file">Select a file</string>
  <string name="import_select_file">Select a file</string>
  <string name="app_theme">App Theme</string>
  <string name="calc_title">AI code</string>
  <string name="calc_copy">Copy</string>
  <string name="calc_paste">Paste</string>
  <string name="title_activity_calc_settings">AI Settings</string>
  <string name="calc_format_displayed_decimals">Displayed decimals</string>
  <string name="calc_format_displayed_decimals_desc">Sets the number of displayed decimals.</string>
  <string name="calc_format_decimal_separator">Decimal separator</string>
  <string name="calc_format_decimal_separator_desc">Sets the decimal separator. For example 3.14</string>
  <string name="calc_format_display_group_separator">Display group separator</string>
  <string name="calc_format_display_group_separator_desc">Displays the thousands group separator of the number. For example 1,234,567</string>
  <string name="clipboard">Clipboard=</string>
  <string name="calc_headline">AI</string>
  <string name="calc_prog_headline">AI code</string>
  <string name="calc_format_radian">Degree/Radian</string>
  <string name="calc_format_radian_desc">Use 2π instead of 360° for trigonometric functions.</string>
  <string name="calc_display_name">Display name:</string>
  <string name="calc_code">AI code</string>
  <string name="execute">Execute</string>
  <string name="export_code">Export AI</string>
  <string name="export_code_desc">Export the AI code as a .json file.</string>
  <string name="import_code">Import AI</string>
  <string name="import_code_desc">Import AI code from a .json file.</string>
  <string name="load_code_msg">The AI code was loaded.</string>
  <string name="save_code_msg">The AI code was saved to a .json file.</string>
  <string name="calc_invalid_args">Missing numbers.</string>
  <string name="calc_error_msg">Error at symbol \'%1$s\'.</string>
  <string name="calc_error_parsing_msg">Error parsing \'%1$s\'.</string>
  <string name="calc_F1_code">// Calculate the percentage change\n// from a to b\n\n// 2: a\n// 1: b\n// ∆% = 100 * (b - a) / a\nover - swap / 100 *\n\n// round to two digits\nround2\n\n// add \"∆% \" to the result\n\"∆% \" +\n\n// perc is the built-in function for percentage change without rounding\n// 10 12 perc</string>
  <string name="calc_F1_desc">∆% .2</string>
  <string name="calc_F2_code">// Mortgage Calculator\n// Monthly Payment\n\n// 3: Loan Amount\n// 2: Loan Term in Years\n// 1: Annual Interest Rate in %\n\n1200 / dup 1 + rot -12 * ^ 1 swap - / * round2 \"Monthly Payment \" +</string>
  <string name="calc_F2_desc">Loan Payment</string>
  <string name="calc_F3_code">// Mortgage Calculator\n// Loan Amount\n\n// 3: Monthly Payment\n// 2: Loan Term in Years\n// 1: Annual Interest Rate in %\n\n1200 / rot over / rot rot 1 + swap -12 * ^ 1 swap - * round2 \"Loan Amount \" +</string>
  <string name="calc_F3_desc">Loan Amount</string>
  <string name="calc_F4_code">// Mortgage Calculator\n// Loan Term in Years\n\n// 3: Loan Amount\n// 2: Monthly Payment\n// 1: Annual Interest Rate in %\n\n1200 / rot rot / over * 1 swap - ln swap 1 + ln / -12 / round2 \"Loan Term in Years \" +</string>
  <string name="calc_F4_desc">Loan Term</string>
  <string name="calc_F5_code">// Quadratic Equation\n// x²+ax+b\n\nswap -2 / dup dup * rot - sqrt over over + \"x₁=\" + rot rot - \"x₂=\" +"</string>
  <string name="calc_F5_desc">x²+ax+b</string>
  <string name="calc_F6_code">// if conditional example (aiaman)\n\n// 4: else part\n// 3: then part\n// 2: conditional op2\n// 1: conditional op1\n\n// if equal (op2 == op1)?\n// result is 4, not equal\n4 \"false \" +\n3 \"true \" +\n2 1 if.eq\n\n// if greater than (op2 \u003e op1)?\n// result is 3, greater than\n4 \"false \" +\n3 \"true \" +\n2 1 if.gt\n\n// if less than (op2 \u003c op1)?\n// result is 4, not less than\n4 \"false \"\n+ 3 \"true \"\n+ 2 1 if.lt\n\n\n// if conditional label example (aiaman)\n\n// 2: conditional op2\n// 1: conditional op1\n1 2\nif.lt.end // Continue at .end when op2 \u003c op1\n123 // will not be executed\n.end</string>
  <string name="calc_F6_desc">if example</string>
  <string name="calc_F7_code">// Loop example\n\n\"1..10 +1\"\n1\ndo.incrLabel\n  dup 1 + dup 10\nwhile.le.incrLabel\ndrop\n\n\n\"10..1 -1\"\n10\ndo.decrLabel\n  dup 1 - dup 1\nwhile.ge.decrLabel\ndrop\n\n// Recursion\n// 10..1\n: n dup 1 if.le.10..1 dup 1 - n .10..1 ;\n10 n\n\n// Sum 1..10\n: sum dup 1 if.le.sum dup 1 - sum + .sum ;\n10 sum\n\n// Fibonacci\n: fib dup 2 if.le.fib dup 2 - fib swap 1 - fib + .fib ;\n10 fib\n\n// Faculty\n: ! dup 1 if.le.! dup 1 - ! * .! ;\n7 !\n\n\n:degree // set to 360°\n//:radian // set to 2π\n\"0..360 +22.5\"\n0\ndo.f(x)\n  dup\n    // f(x)\u003dsin(x)\n    sin\n  // \"sin(x)\u003d\"\n  \"sin(\" 3 pick toStr + + \"°)\u003d\" +\n  // \u003c\u003d 360 ?\n  swap 22.5 + dup 360\nwhile.le.f(x)\ndrop\n\n// goto example\n// skip 1234\ngoto.end\n1234\n.end</string>
  <string name="calc_F7_desc">while example</string>
  <string name="calc_F8_code">// Clear all\nclear\n\n\n// Variables\n// Store number in variable \u0027abc\u0027\n123 \"abc\u003d\" + sto.abc\n// Store result in Variable \u0027x\u0027\n2 e * π ^ sqrt \"x\u003d\" + sto.x\n\n// Read variable \u0027abc\u0027\nrcl.abc\n\n// Read all variables\nrcl\n\n// Decimal number to fraction (x/y)\n0.75 frac // 3/4\n0.40476190476 frac // 17/42\n\n:radian\npi sin \"sin(π)\u003d\" +\n:degree\n180 sin \"sin(180°)\u003d\" +\n\n// Modulo\n23 7 mod\n\n// Stack\n// n pick\n1 2 3 4 4 pick \"Copy from 4:\" // 1 2 3 4 1\n\n// n roll\n1 2 3 4 4 roll \"Move from 4:\" // 2 3 4 1\n\n// Stack size\ndepth \"Elements\u003d\" +\n\n\n// Function definition\n: add5 5 + ;\n\n// run function definition\n1 add5\n\n// run as function reference\n2\n(add5) // function reference of add5\n() // run function reference\n\n\n// Anonymous function definition\n2\n{ dup * }\n() // run\n\n// store anonymous function definition\n{ dup * } sto.a\n// run\n3 rcl.a ()\n\n\n// Statistics\n// var (Variance)\n// sum (Sum)</string>
  <string name="calc_F8_desc">More examples</string>
  <string name="calc_F9_code">clear\n\n//:clearcode\n//:defaultcode</string>
  <string name="calc_F9_desc">Clear all</string>
  <string name="calc_F10_code">// Function definition\n// : name ... ;\n\n// Numeric Integration of f(x)\n// 1: start\n// 2: end\n// 3: precision\n// 4: f(x) as lambda\n\n: integral\nsto.fxLambda@MathLib // f(x)\nsto.dx@MathLib // precision\nsto.x2@MathLib // end\n0\ndo.∫x@MathLib\n  over\n    // f(x)\n    rcl.fxLambda@MathLib ()\n  + swap rcl.dx@MathLib + swap over rcl.x2@MathLib\nwhile.lt.∫x@MathLib\nswap drop rcl.dx@MathLib * \"∫f(x)dx\u003d\" +\n;\n\n// Numeric zero finder for f(x)\n// 1: start\n// 2: f(x) as lambda\n\n: zero\nsto.fxLambda@MathLib // f(x)\n// dx \u003d f(x) - f(x-∆x) / ∆x\n0.001 sto.∆x@MathLib\n\n// precision\n0.0000001 sto.ε@MathLib\n\ndo.∆x@MathLib\n  dup dup rcl.fxLambda@MathLib () dup 3 pick rcl.∆x@MathLib - rcl.fxLambda@MathLib () - / rcl.∆x@MathLib * - swap over - abs rcl.ε@MathLib\nwhile.gt.∆x@MathLib\n\"x₀\u003d\" +\n;\n\n// disable endless loop check\n:loop</string>
  <string name="calc_F10_desc">mathlib</string>
  <string name="calc_F11_code">import.\"mathlib\"\n\n// Numeric Integration of f(x)\n\n//          4\n// example ?x²dx\n//          ¹\n\n1 // start\n4 // end\n0.001 // precision\n{ dup * } // f(x) as lambda\nintegral\n\n\n// example ?sin(x)dx from 0..p\n\n// f(x) as function definition\n: f2 sin ;\n//:degree // set to 360°\n:radian // set to 2p\n\n0 // start\np // end\np 100 / // precision\n(f2) // f(x) als lambda\nintegral\n\n\n// Numeric zero finder for f(x)\n1 // start\n{ sq 3 - } // f(x)\u003dx²-3\nzero\n</string>
  <string name="calc_F11_desc">∫f(x)dx\nf(x)\u003d0</string>
  <string name="calc_F12_code">// Weekday using Gauss\n// 3: day\n// 2: month\n// 1: year\n\nswap\n\n// correction for Jan and Feb\ndup 2\n if.gt.endif\n  // month+12\n  // year-1\n  12 + swap 1 - swap\n .endif\n\n// y\nrot rot dup 100 / int swap 100 mod 5 * 4 / int\n// c\nswap dup 4 / int swap 2 * - 1 -\n// m \n4 roll 1 + 26 * 10 / int \n// y+c+m+d\n+ + + 77 + 7 mod 1 +\n\n\"Saturday\"\n\"Friday\"\n\"Thursday\"\n\"Wednesday\"\n\"Tuesday\"\n\"Monday\"\n\"Sunday\"\n// Sunday is 1, ...\n// move result to the top\n8 roll\n// select text\nroll\n// remove the other text\nsd2 sd2 sd2\n\"Is a \" swap +\n\n: sd swap drop ;\n: sd2 sd sd ;\n</string>
  <string name="calc_F12_desc">Weekday</string>
  <string name="calc_F13_code"></string>
  <string name="calc_F13_desc"></string>
  <string name="calc_F14_code"></string>
  <string name="calc_F14_desc"></string>
  <string name="calc_F15_code">import.\"mathlib\"\n\n// Math calculus test\n:radian\n\n// -e^(x-2)\n{ 2 - e swap ^ -1 * } sto.fx1\n\n0 // start\n2 // end\n0,001 // precision\nrcl.fx1 // f(x) als lambda\nintegral\n\n// x^3+x^2-4x-4\n{ sto.x rcl.x dup dup * * rcl.x dup * + rcl.x 4 * - 4 - } sto.fx2\n\n-3 // start\nrcl.fx2\nnullstelle\n\n0 // start\nrcl.fx2\nnullstelle\n\n3 // start\nrcl.fx2\nnullstelle\n\n// Tabelle -3..3\n\"-----------------\"\n\"f(x) -3..3\"\n\"-----------------\"\n-3 sto.x1\n3 sto.x2\n1 sto.?x\ndo.Tabelle\n\n rcl.x1\n rcl.fx2 ()\n // \"f(x)\u003d\"\n \"f(\" rcl.x1 toStr + \")\u003d\" + +\n\n // x1+\u003d?x\n rcl.x1 rcl.?x + sto.x1\n\n // x1 \u003c\u003d x2 ?\n rcl.x1\n rcl.x2\nwhile.le.Tabelle\n\"-----------------\"\n\n// abs(x^3+x^2-4x-4)\n{ sto.x rcl.x dup dup * * rcl.x dup * + rcl.x 4 * - 4 - abs } sto.fx3\n\n-2 // start\n2 // end\n0,001 // precision\nrcl.fx3 // f(x) als lambda\nintegral\n</string>
  <string name="calc_F15_desc">Math 1</string>
  <string name="calc_F16_code">import.\"mathlib\"\n\n// Math calculus final\n:radian\n\n// 4•x•e^(-x) - 1\n{ dup -1 * e swap ^ 4 * * 1 - } sto.fx1\n\n0 // start\nrcl.fx1\nnullstelle\n\n2 // start\nrcl.fx1\nnullstelle\n\nover over\n\n0,001 // precision\nrcl.fx1 // f(x) als lambda\nintegral\n\n// vx•sin(x•p/2)\n{ dup sqrt swap pi * 2 / sin * } sto.fx\n\n0 // start\n2 // end\n0,001 // precision\nrcl.fx // f(x) als lambda\nintegral\n\n2 // start\n4 // end\n0,001 // precision\nrcl.fx // f(x) als lambda\nintegral\nabs \n\n4 // start\n6 // end\n0,001 // precision\nrcl.fx // f(x) als lambda\nintegral\n\n6 // start\n8 // end\n0,001 // precision\nrcl.fx // f(x) als lambda\nintegral\nabs\n\n0 // start\n8 // end\n0,001 // precision\n// abs(vx•sin(x•p/2))\n{ dup sqrt swap pi * 2 / sin * abs } // f(x) als lambda\nintegral\n</string>
  <string name="calc_F16_desc">Math 2</string>
  <string name="calc_endless_loop">Possible endless loop. Task stopped.</string>
  <string name="calc_missing_label">Missing label \'.%1$s\'.</string>
  <string name="calc_missing_while_label">Missing while-label \'do.%1$s\'.</string>
  <string name="calc_missing_if_label">Missing if-label \'.%1$s\'.</string>
  <string name="calc_duplicate_label">Duplicate label \'.%1$s\'.</string>
  <string name="calc_duplicate_while_label">Duplicate while-label \'.%1$s\'.</string>
  <string name="calc_invalid_while_args">Missing numbers for \'while\'.</string>
  <string name="calc_invalid_if_args">Missing numbers for \'if\'.</string>
  <string name="calc_unknown_while_condition">Unknown while condition \'%1$s\'. Use while.[eq ge gt le lt].</string>
  <string name="calc_unknown_if_condition">Unknown if condition \'%1$s\'. Use if.[eq ge gt le lt].</string>
  <string name="calc_incomplete_definition">Incomplete function definition \'%1$s\'.</string>
  <string name="calc_definition_entry_exists">Function definition already exist \'%1$s\'.</string>
  <string name="calc_definition_is_keyword">Function definition name \'%1$s\' must not be a key word.</string>
  <string name="calc_unknown_import">\'%1$s\' does not exist.</string>
  <string name="calc_multiple_imports">\'%1$s\' is defined more than once.</string>
  <string name="calc_missing_lambda">The command \'()\' expects a function.</string>
  <string name="calc_lambda_not_terminated">Missing closing \'}\'.</string>
  <string name="calc_empty_definition">Function definition must not be empty.</string>
  <string name="save">Save</string>
  <string name="cancel">Cancel</string>
  <string name="ok">OK</string>
  <string name="version">Version</string>
  <string name="email_feedback_summary">Send an email directly to the developers.</string>
  <string name="email_feedback_title">Send email</string>
</resources>
